/*
 * e-Fatura API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: helpdesk@efatura.cv
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.kriolos.efatura.clientapi.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.Arrays;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for LedDto
 */
public class LedDtoTest {
    private final LedDto model = new LedDto();

    /**
     * Model tests for LedDto
     */
    @Test
    public void testLedDto() {
        // TODO: test LedDto
    }

    /**
     * Test the property 'code'
     */
    @Test
    public void codeTest() {
        // TODO: test code
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'serie'
     */
    @Test
    public void serieTest() {
        // TODO: test serie
    }

    /**
     * Test the property 'addressCode'
     */
    @Test
    public void addressCodeTest() {
        // TODO: test addressCode
    }

    /**
     * Test the property 'addressDetail'
     */
    @Test
    public void addressDetailTest() {
        // TODO: test addressDetail
    }

    /**
     * Test the property 'softwareCode'
     */
    @Test
    public void softwareCodeTest() {
        // TODO: test softwareCode
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

}
