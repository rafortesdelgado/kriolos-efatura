/*
 * e-Fatura API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: helpdesk@efatura.cv
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.kriolos.efatura.clientapi.generated.api;

import io.github.kriolos.efatura.clientapi.generated.*;
import io.github.kriolos.efatura.clientapi.generated.auth.*;
import io.github.kriolos.efatura.clientapi.generated.model.EfEntriesProcessingResponse;
import io.github.kriolos.efatura.clientapi.generated.model.EventListPaginationResponse;
import io.github.kriolos.efatura.clientapi.generated.model.EventListProcessingResponse;
import java.io.File;
import io.github.kriolos.efatura.clientapi.generated.model.PayloadProcessingResponseEvent;
import io.github.kriolos.efatura.clientapi.generated.model.PayloadProcessingResponseString;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventApi
 */
public class EventApiTest {

    private final EventApi api = new EventApi();

    /**
     * Comunicação de novos eventos.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventResourceCreateEventTest() throws ApiException {
        //String cvEfRepositoryCode = null;
        //File _file = null;
        //EfEntriesProcessingResponse response = api.eventResourceCreateEvent(cvEfRepositoryCode, _file);
        // TODO: test validations
    }

    /**
     * Consulta de evento com ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventResourceGetEventByIdTest() throws ApiException {
        //String id = null;
        //String cvEfRepositoryCode = null;
        //PayloadProcessingResponseEvent response = api.eventResourceGetEventById(id, cvEfRepositoryCode);
        // TODO: test validations
    }

    /**
     * Lista de eventos limitada em 10000 eventos.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventResourceGetEventListV1Test() throws ApiException {
        //String authorizedDateEnd = null;
        //String authorizedDateStart = null;
        //String documentNumberEnd = null;
        //String documentNumberStart = null;
        //String documentTypeCodes = null;
        //String eventId = null;
        //String eventTypeCodes = null;
        //String IUD = null;
        //String ledCode = null;
        //String year = null;
        //String cvEfRepositoryCode = null;
        //EventListProcessingResponse response = api.eventResourceGetEventListV1(authorizedDateEnd, authorizedDateStart, documentNumberEnd, documentNumberStart, documentTypeCodes, eventId, eventTypeCodes, IUD, ledCode, year, cvEfRepositoryCode);
        // TODO: test validations
    }

    /**
     * Lista de eventos que suporta paginação.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventResourceGetEventListV2Test() throws ApiException {
        //String authorizedDateEnd = null;
        //String authorizedDateStart = null;
        //String documentNumberEnd = null;
        //String documentNumberStart = null;
        //String documentTypeCodes = null;
        //String eventId = null;
        //String eventTypeCodes = null;
        //String IUD = null;
        //String itemsPerPage = null;
        //String ledCode = null;
        //String page = null;
        //String year = null;
        //String cvEfRepositoryCode = null;
        //EventListPaginationResponse response = api.eventResourceGetEventListV2(authorizedDateEnd, authorizedDateStart, documentNumberEnd, documentNumberStart, documentTypeCodes, eventId, eventTypeCodes, IUD, itemsPerPage, ledCode, page, year, cvEfRepositoryCode);
        // TODO: test validations
    }

    /**
     * Consulta de evento com ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void eventResourceGetEventXmlByIdTest() throws ApiException {
        //String id = null;
        //String cvEfRepositoryCode = null;
        //PayloadProcessingResponseString response = api.eventResourceGetEventXmlById(id, cvEfRepositoryCode);
        // TODO: test validations
    }

}
