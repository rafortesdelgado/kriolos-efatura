/*
 * e-Fatura API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: helpdesk@efatura.cv
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.kriolos.efatura.clientapi.generated.api;

import io.github.kriolos.efatura.clientapi.generated.*;
import io.github.kriolos.efatura.clientapi.generated.auth.*;
import io.github.kriolos.efatura.clientapi.generated.model.DfeListPaginationResponse;
import io.github.kriolos.efatura.clientapi.generated.model.DfeListProcessingResponse;
import io.github.kriolos.efatura.clientapi.generated.model.DfeSelfBillingAuthorizeRequest;
import io.github.kriolos.efatura.clientapi.generated.model.EfEntriesProcessingResponse;
import java.io.File;
import io.github.kriolos.efatura.clientapi.generated.model.PayloadProcessingResponseDfe;
import io.github.kriolos.efatura.clientapi.generated.model.PayloadProcessingResponseDfeSelfBillingAuthorizeResponse;
import io.github.kriolos.efatura.clientapi.generated.model.PayloadProcessingResponseLong;
import io.github.kriolos.efatura.clientapi.generated.model.PayloadProcessingResponseString;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DfeApi
 */
public class DfeApiTest {

    private final DfeApi api = new DfeApi();

    /**
     * Pedido de autorização para autofaturação.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfeResourceAuthorizeSelfBillingTest() throws ApiException {
        //String cvEfRepositoryCode = null;
        //DfeSelfBillingAuthorizeRequest dfeSelfBillingAuthorizeRequest = null;
        //PayloadProcessingResponseDfeSelfBillingAuthorizeResponse response = api.dfeResourceAuthorizeSelfBilling(cvEfRepositoryCode, dfeSelfBillingAuthorizeRequest);
        // TODO: test validations
    }

    /**
     * Comunicação de novos DFEs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfeResourceCreateDfeTest() throws ApiException {
        //String cvEfRepositoryCode = null;
        //File _file = null;
        //EfEntriesProcessingResponse response = api.dfeResourceCreateDfe(cvEfRepositoryCode, _file);
        // TODO: test validations
    }

    /**
     * Elimina todos os DFEs e os respetivos eventos no repositório de Homologação/Teste.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfeResourceDeleteDfeEventTest() throws ApiException {
        //String cvEfRepositoryCode = null;
        //PayloadProcessingResponseLong response = api.dfeResourceDeleteDfeEvent(cvEfRepositoryCode);
        // TODO: test validations
    }

    /**
     * Consulta de DFE com IUD.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfeResourceGetDfeByIdTest() throws ApiException {
        //String id = null;
        //String cvEfRepositoryCode = null;
        //PayloadProcessingResponseDfe response = api.dfeResourceGetDfeById(id, cvEfRepositoryCode);
        // TODO: test validations
    }

    /**
     * Consulta de PDF de um DFE com IUD.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfeResourceGetDfePdfByIdTest() throws ApiException {
        //String id = null;
        //String cvEfRepositoryCode = null;
        //PayloadProcessingResponseString response = api.dfeResourceGetDfePdfById(id, cvEfRepositoryCode);
        // TODO: test validations
    }

    /**
     * Lista de DFEs limitada em 10000 DFEs.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfeResourceGetDfeSummaryListV1Test() throws ApiException {
        //String authorizedDateEnd = null;
        //String authorizedDateStart = null;
        //String documentNumber = null;
        //String documentTypeCodes = null;
        //String emitterTaxId = null;
        //String IUD = null;
        //String isCanceled = null;
        //String issueDirection = null;
        //String issueYear = null;
        //String ledCode = null;
        //String receiverTaxId = null;
        //String receiverTaxIdCountryCode = null;
        //String cvEfRepositoryCode = null;
        //DfeListProcessingResponse response = api.dfeResourceGetDfeSummaryListV1(authorizedDateEnd, authorizedDateStart, documentNumber, documentTypeCodes, emitterTaxId, IUD, isCanceled, issueDirection, issueYear, ledCode, receiverTaxId, receiverTaxIdCountryCode, cvEfRepositoryCode);
        // TODO: test validations
    }

    /**
     * Lista de DFEs que suporta paginação.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfeResourceGetDfeSummaryListV2Test() throws ApiException {
        //String authorizedDateEnd = null;
        //String authorizedDateStart = null;
        //String documentNumber = null;
        //String documentTypeCodes = null;
        //String emitterTaxId = null;
        //String IUD = null;
        //String isCanceled = null;
        //String issueDirection = null;
        //String issueYear = null;
        //String itemsPerPage = null;
        //String ledCode = null;
        //String page = null;
        //String receiverTaxId = null;
        //String receiverTaxIdCountryCode = null;
        //String cvEfRepositoryCode = null;
        //DfeListPaginationResponse response = api.dfeResourceGetDfeSummaryListV2(authorizedDateEnd, authorizedDateStart, documentNumber, documentTypeCodes, emitterTaxId, IUD, isCanceled, issueDirection, issueYear, itemsPerPage, ledCode, page, receiverTaxId, receiverTaxIdCountryCode, cvEfRepositoryCode);
        // TODO: test validations
    }

    /**
     * Consulta de XML com IUD exatamente como foi gerado e assinado pelo contribuinte e com aposição de timestamp.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dfeResourceGetDfeXmlByIdTest() throws ApiException {
        //String id = null;
        //String cvEfRepositoryCode = null;
        //PayloadProcessingResponseString response = api.dfeResourceGetDfeXmlById(id, cvEfRepositoryCode);
        // TODO: test validations
    }

}
