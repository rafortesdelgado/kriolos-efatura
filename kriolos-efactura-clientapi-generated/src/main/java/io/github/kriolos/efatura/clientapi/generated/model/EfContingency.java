/*
 * e-Fatura API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: helpdesk@efatura.cv
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.kriolos.efatura.clientapi.generated.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.github.kriolos.efatura.clientapi.generated.JSON;


/**
 * EfContingency
 */
@JsonPropertyOrder({
  EfContingency.JSON_PROPERTY_LED_CODE,
  EfContingency.JSON_PROPERTY_I_U_C,
  EfContingency.JSON_PROPERTY_ISSUE_DATE,
  EfContingency.JSON_PROPERTY_ISSUE_TIME,
  EfContingency.JSON_PROPERTY_REASON_TYPE_CODE,
  EfContingency.JSON_PROPERTY_REASON_DESCRIPTION
})
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-13T10:20:11.702467700-01:00[Atlantic/Cape_Verde]")
public class EfContingency {
  public static final String JSON_PROPERTY_LED_CODE = "LedCode";
  private Integer ledCode;

  public static final String JSON_PROPERTY_I_U_C = "IUC";
  private String IUC;

  public static final String JSON_PROPERTY_ISSUE_DATE = "IssueDate";
  private String issueDate;

  public static final String JSON_PROPERTY_ISSUE_TIME = "IssueTime";
  private String issueTime;

  public static final String JSON_PROPERTY_REASON_TYPE_CODE = "ReasonTypeCode";
  private Integer reasonTypeCode;

  public static final String JSON_PROPERTY_REASON_DESCRIPTION = "ReasonDescription";
  private String reasonDescription;

  public EfContingency() { 
  }

  public EfContingency ledCode(Integer ledCode) {
    this.ledCode = ledCode;
    return this;
  }

   /**
   * Get ledCode
   * @return ledCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LED_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getLedCode() {
    return ledCode;
  }


  @JsonProperty(JSON_PROPERTY_LED_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLedCode(Integer ledCode) {
    this.ledCode = ledCode;
  }


  public EfContingency IUC(String IUC) {
    this.IUC = IUC;
    return this;
  }

   /**
   * Get IUC
   * @return IUC
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_I_U_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIUC() {
    return IUC;
  }


  @JsonProperty(JSON_PROPERTY_I_U_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIUC(String IUC) {
    this.IUC = IUC;
  }


  public EfContingency issueDate(String issueDate) {
    this.issueDate = issueDate;
    return this;
  }

   /**
   * Get issueDate
   * @return issueDate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssueDate() {
    return issueDate;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssueDate(String issueDate) {
    this.issueDate = issueDate;
  }


  public EfContingency issueTime(String issueTime) {
    this.issueTime = issueTime;
    return this;
  }

   /**
   * Get issueTime
   * @return issueTime
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssueTime() {
    return issueTime;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssueTime(String issueTime) {
    this.issueTime = issueTime;
  }


  public EfContingency reasonTypeCode(Integer reasonTypeCode) {
    this.reasonTypeCode = reasonTypeCode;
    return this;
  }

   /**
   * Get reasonTypeCode
   * @return reasonTypeCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REASON_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getReasonTypeCode() {
    return reasonTypeCode;
  }


  @JsonProperty(JSON_PROPERTY_REASON_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReasonTypeCode(Integer reasonTypeCode) {
    this.reasonTypeCode = reasonTypeCode;
  }


  public EfContingency reasonDescription(String reasonDescription) {
    this.reasonDescription = reasonDescription;
    return this;
  }

   /**
   * Get reasonDescription
   * @return reasonDescription
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REASON_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getReasonDescription() {
    return reasonDescription;
  }


  @JsonProperty(JSON_PROPERTY_REASON_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReasonDescription(String reasonDescription) {
    this.reasonDescription = reasonDescription;
  }


  /**
   * Return true if this EfContingency object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EfContingency efContingency = (EfContingency) o;
    return Objects.equals(this.ledCode, efContingency.ledCode) &&
        Objects.equals(this.IUC, efContingency.IUC) &&
        Objects.equals(this.issueDate, efContingency.issueDate) &&
        Objects.equals(this.issueTime, efContingency.issueTime) &&
        Objects.equals(this.reasonTypeCode, efContingency.reasonTypeCode) &&
        Objects.equals(this.reasonDescription, efContingency.reasonDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ledCode, IUC, issueDate, issueTime, reasonTypeCode, reasonDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EfContingency {\n");
    sb.append("    ledCode: ").append(toIndentedString(ledCode)).append("\n");
    sb.append("    IUC: ").append(toIndentedString(IUC)).append("\n");
    sb.append("    issueDate: ").append(toIndentedString(issueDate)).append("\n");
    sb.append("    issueTime: ").append(toIndentedString(issueTime)).append("\n");
    sb.append("    reasonTypeCode: ").append(toIndentedString(reasonTypeCode)).append("\n");
    sb.append("    reasonDescription: ").append(toIndentedString(reasonDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

