/*
 * e-Fatura API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: helpdesk@efatura.cv
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.kriolos.efatura.clientapi.generated.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.github.kriolos.efatura.clientapi.generated.model.DfeDiscount;
import io.github.kriolos.efatura.clientapi.generated.model.DfeLineItem;
import io.github.kriolos.efatura.clientapi.generated.model.DfeLineQuantity;
import io.github.kriolos.efatura.clientapi.generated.model.DfeLineTax;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.github.kriolos.efatura.clientapi.generated.JSON;


/**
 * DfeLine
 */
@JsonPropertyOrder({
  DfeLine.JSON_PROPERTY_ID,
  DfeLine.JSON_PROPERTY_LINE_REFERENCE_ID,
  DfeLine.JSON_PROPERTY_LINE_TYPE_CODE,
  DfeLine.JSON_PROPERTY_ORDER_LINE_REFERENCE,
  DfeLine.JSON_PROPERTY_QUANTITY,
  DfeLine.JSON_PROPERTY_PRICE,
  DfeLine.JSON_PROPERTY_PRICE_EXTENSION,
  DfeLine.JSON_PROPERTY_DISCOUNT,
  DfeLine.JSON_PROPERTY_NET_TOTAL,
  DfeLine.JSON_PROPERTY_TAXES,
  DfeLine.JSON_PROPERTY_ITEM
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-13T10:03:03.079208700-01:00[Atlantic/Cape_Verde]")
public class DfeLine {
  public static final String JSON_PROPERTY_ID = "Id";
  private String id;

  public static final String JSON_PROPERTY_LINE_REFERENCE_ID = "LineReferenceId";
  private String lineReferenceId;

  public static final String JSON_PROPERTY_LINE_TYPE_CODE = "LineTypeCode";
  private String lineTypeCode;

  public static final String JSON_PROPERTY_ORDER_LINE_REFERENCE = "OrderLineReference";
  private String orderLineReference;

  public static final String JSON_PROPERTY_QUANTITY = "Quantity";
  private DfeLineQuantity quantity;

  public static final String JSON_PROPERTY_PRICE = "Price";
  private Double price;

  public static final String JSON_PROPERTY_PRICE_EXTENSION = "PriceExtension";
  private Double priceExtension;

  public static final String JSON_PROPERTY_DISCOUNT = "Discount";
  private DfeDiscount discount;

  public static final String JSON_PROPERTY_NET_TOTAL = "NetTotal";
  private Double netTotal;

  public static final String JSON_PROPERTY_TAXES = "Taxes";
  private List<DfeLineTax> taxes = null;

  public static final String JSON_PROPERTY_ITEM = "Item";
  private DfeLineItem item;

  public DfeLine() { 
  }

  public DfeLine id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public DfeLine lineReferenceId(String lineReferenceId) {
    this.lineReferenceId = lineReferenceId;
    return this;
  }

   /**
   * Get lineReferenceId
   * @return lineReferenceId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINE_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLineReferenceId() {
    return lineReferenceId;
  }


  @JsonProperty(JSON_PROPERTY_LINE_REFERENCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLineReferenceId(String lineReferenceId) {
    this.lineReferenceId = lineReferenceId;
  }


  public DfeLine lineTypeCode(String lineTypeCode) {
    this.lineTypeCode = lineTypeCode;
    return this;
  }

   /**
   * Get lineTypeCode
   * @return lineTypeCode
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINE_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLineTypeCode() {
    return lineTypeCode;
  }


  @JsonProperty(JSON_PROPERTY_LINE_TYPE_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLineTypeCode(String lineTypeCode) {
    this.lineTypeCode = lineTypeCode;
  }


  public DfeLine orderLineReference(String orderLineReference) {
    this.orderLineReference = orderLineReference;
    return this;
  }

   /**
   * Get orderLineReference
   * @return orderLineReference
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORDER_LINE_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOrderLineReference() {
    return orderLineReference;
  }


  @JsonProperty(JSON_PROPERTY_ORDER_LINE_REFERENCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrderLineReference(String orderLineReference) {
    this.orderLineReference = orderLineReference;
  }


  public DfeLine quantity(DfeLineQuantity quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DfeLineQuantity getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(DfeLineQuantity quantity) {
    this.quantity = quantity;
  }


  public DfeLine price(Double price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPrice(Double price) {
    this.price = price;
  }


  public DfeLine priceExtension(Double priceExtension) {
    this.priceExtension = priceExtension;
    return this;
  }

   /**
   * Get priceExtension
   * @return priceExtension
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PRICE_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getPriceExtension() {
    return priceExtension;
  }


  @JsonProperty(JSON_PROPERTY_PRICE_EXTENSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPriceExtension(Double priceExtension) {
    this.priceExtension = priceExtension;
  }


  public DfeLine discount(DfeDiscount discount) {
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DfeDiscount getDiscount() {
    return discount;
  }


  @JsonProperty(JSON_PROPERTY_DISCOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDiscount(DfeDiscount discount) {
    this.discount = discount;
  }


  public DfeLine netTotal(Double netTotal) {
    this.netTotal = netTotal;
    return this;
  }

   /**
   * Get netTotal
   * @return netTotal
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NET_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getNetTotal() {
    return netTotal;
  }


  @JsonProperty(JSON_PROPERTY_NET_TOTAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNetTotal(Double netTotal) {
    this.netTotal = netTotal;
  }


  public DfeLine taxes(List<DfeLineTax> taxes) {
    this.taxes = taxes;
    return this;
  }

  public DfeLine addTaxesItem(DfeLineTax taxesItem) {
    if (this.taxes == null) {
      this.taxes = new ArrayList<>();
    }
    this.taxes.add(taxesItem);
    return this;
  }

   /**
   * Get taxes
   * @return taxes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<DfeLineTax> getTaxes() {
    return taxes;
  }


  @JsonProperty(JSON_PROPERTY_TAXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTaxes(List<DfeLineTax> taxes) {
    this.taxes = taxes;
  }


  public DfeLine item(DfeLineItem item) {
    this.item = item;
    return this;
  }

   /**
   * Get item
   * @return item
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DfeLineItem getItem() {
    return item;
  }


  @JsonProperty(JSON_PROPERTY_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setItem(DfeLineItem item) {
    this.item = item;
  }


  /**
   * Return true if this DfeLine object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DfeLine dfeLine = (DfeLine) o;
    return Objects.equals(this.id, dfeLine.id) &&
        Objects.equals(this.lineReferenceId, dfeLine.lineReferenceId) &&
        Objects.equals(this.lineTypeCode, dfeLine.lineTypeCode) &&
        Objects.equals(this.orderLineReference, dfeLine.orderLineReference) &&
        Objects.equals(this.quantity, dfeLine.quantity) &&
        Objects.equals(this.price, dfeLine.price) &&
        Objects.equals(this.priceExtension, dfeLine.priceExtension) &&
        Objects.equals(this.discount, dfeLine.discount) &&
        Objects.equals(this.netTotal, dfeLine.netTotal) &&
        Objects.equals(this.taxes, dfeLine.taxes) &&
        Objects.equals(this.item, dfeLine.item);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, lineReferenceId, lineTypeCode, orderLineReference, quantity, price, priceExtension, discount, netTotal, taxes, item);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DfeLine {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lineReferenceId: ").append(toIndentedString(lineReferenceId)).append("\n");
    sb.append("    lineTypeCode: ").append(toIndentedString(lineTypeCode)).append("\n");
    sb.append("    orderLineReference: ").append(toIndentedString(orderLineReference)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceExtension: ").append(toIndentedString(priceExtension)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    netTotal: ").append(toIndentedString(netTotal)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

