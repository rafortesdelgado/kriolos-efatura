/*
 * e-Fatura API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: helpdesk@efatura.cv
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.kriolos.efatura.clientapi.generated.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for PayloadProcessingResponseSoftwareCustomerEntityPayload
 */
public class PayloadProcessingResponseSoftwareCustomerEntityPayloadTest {
    private final PayloadProcessingResponseSoftwareCustomerEntityPayload model = new PayloadProcessingResponseSoftwareCustomerEntityPayload();

    /**
     * Model tests for PayloadProcessingResponseSoftwareCustomerEntityPayload
     */
    @Test
    public void testPayloadProcessingResponseSoftwareCustomerEntityPayload() {
        // TODO: test PayloadProcessingResponseSoftwareCustomerEntityPayload
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'softwareCode'
     */
    @Test
    public void softwareCodeTest() {
        // TODO: test softwareCode
    }

    /**
     * Test the property 'transmitterTaxId'
     */
    @Test
    public void transmitterTaxIdTest() {
        // TODO: test transmitterTaxId
    }

    /**
     * Test the property 'customerTaxId'
     */
    @Test
    public void customerTaxIdTest() {
        // TODO: test customerTaxId
    }

    /**
     * Test the property 'useExclusiveOAuthParams'
     */
    @Test
    public void useExclusiveOAuthParamsTest() {
        // TODO: test useExclusiveOAuthParams
    }

    /**
     * Test the property 'oAuthClientId'
     */
    @Test
    public void oAuthClientIdTest() {
        // TODO: test oAuthClientId
    }

    /**
     * Test the property 'oAuthClientSecret'
     */
    @Test
    public void oAuthClientSecretTest() {
        // TODO: test oAuthClientSecret
    }

    /**
     * Test the property 'oAuthRedirectUris'
     */
    @Test
    public void oAuthRedirectUrisTest() {
        // TODO: test oAuthRedirectUris
    }

    /**
     * Test the property 'isEnabled'
     */
    @Test
    public void isEnabledTest() {
        // TODO: test isEnabled
    }

    /**
     * Test the property 'created'
     */
    @Test
    public void createdTest() {
        // TODO: test created
    }

    /**
     * Test the property 'updated'
     */
    @Test
    public void updatedTest() {
        // TODO: test updated
    }

}
